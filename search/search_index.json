{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome! \u00b6 Welcome to More Data Structures! Here you'll be able to reinforce the material you'll be learning in your Data Structures course. Please refer to the navigation buttons above to select a topic and view material their corresponding material. Here is what you can expect More Data Strucutues to provide: A summary of what you've learned in your Data Structure course A set of problems for each topic with hints and solutions Coding exercises that are integrated with Git and GitHub Useful links and resources CSUF Supplemental Instruction \u00b6 This website is intended to be a supplement to Oscar's assigned CPSC 131 Data Structures Supplemental Instruction session. As a result, the content on this website will be completely wiped and re-developed at the beginning of every California State University, Fullerton (CSUF) semester. Topics are released on a rolling basis. Release dates are based off what the 131 professors have covered so far.","title":"Home"},{"location":"#welcome","text":"Welcome to More Data Structures! Here you'll be able to reinforce the material you'll be learning in your Data Structures course. Please refer to the navigation buttons above to select a topic and view material their corresponding material. Here is what you can expect More Data Strucutues to provide: A summary of what you've learned in your Data Structure course A set of problems for each topic with hints and solutions Coding exercises that are integrated with Git and GitHub Useful links and resources","title":"Welcome!"},{"location":"#csuf-supplemental-instruction","text":"This website is intended to be a supplement to Oscar's assigned CPSC 131 Data Structures Supplemental Instruction session. As a result, the content on this website will be completely wiped and re-developed at the beginning of every California State University, Fullerton (CSUF) semester. Topics are released on a rolling basis. Release dates are based off what the 131 professors have covered so far.","title":"CSUF Supplemental Instruction"},{"location":"set-up/","text":"Overview \u00b6 Every Wednesday, a new set of programming exercises will be introduced via GitHub. You can find the exercises at the repository https://github.com/omolazabal/si-fall-2019 . Continue reading to learn how to use the repository. The structures of the repository is as follows: . \u251c\u2500 1-dynamic-memory/ # Dynamic memory topic \u2502 \u251c\u2500 codebase \u2502 \u2514\u2500 ... \u2502 \u251c\u2500 2-fixed-vector/ # Vectors topic \u2502 \u251c\u2500 codebase \u2502 \u2514\u2500 ... \u2502 \u251c\u2500 ... # Other topics \u2502 \u2514\u2500 ... \u2502 \u251c\u2500 7-recursion/a # Recursion topics \u2502 \u251c\u2500 codebase \u2502 \u2514\u2500 ... Where each directory labeled with a number represents a topic and their sub-directories represents their codebase. Note Topics will be added as the semester progresses as described on the homepage . Each topic's codebase contains functions with missing code segments. Participants will be tasked with filling in the missing information. Details on the missing information can be found under the topic's respective tab on this website. At the end of the week, the topic's respective codebase will be upadated with solutions, in case participants were unable to finish during the SI session. Getting started \u00b6 Download and set up Tuffix . Create a GitHub account Fork the SI GitHub repository . You can accomplish this by clicking the Fork button on the top right corner of this page. Navigating to your preferred workspace in your terminal to work on the repository locally. Use this guide if necessary. Clone your forked repository by running the following command. Replace with your GitHub username. git clone https://github.com/<YOUR_GITHUB_USERNAME>/si-fall-2019.git Workflow \u00b6 Initial Set Up \u00b6 Before you begin working on programming exercises, you'll have to configure your repository so that you can update it with new problems. This can be done by running the following command in your terminal while in your repository: python3 run.py --config Warning This only has to be done once. If you were to run this command again, all of your progress from all topics will be erased Updating Your Set of Exercises \u00b6 Every week of the semester this repository will be updated with new exercises. The files of each exercise will available in their respective folder. The task is to fill out the empty functions. To update your repository with the latest problems, run the command: python3 run.py --update Editing Code Segments \u00b6 Code segments you are intended to modify are labeled via comments: #include \"course.h\" #include \"student.h\" #include <stdexcept> using namespace std ; Course :: Course () { // Initialize member variables. // By default, course will hold a max of 25 students. // ========= ONLY MODIFY BETWEEN THE LINES =========== // ==================================================== } Please only modify the code between the lines. If changes are made elsewhere, there will be issues when attempting to update your repository with new problems. Testing Your Changes \u00b6 To execute your programs, run the following command at the root of your repository: python3 run.py --test <folder_name> Where the --test flag signifies you want to test the corresponding code in the folder named . Please replace with the name of whichever folder you would like to test. For example, the following command will un the unit tests associated with the 1-dynamic-memory problem set: python3 run.py --test 1-dynamic-memory If you wish to run all tests, use the command: python3 run.py --test all Summary of commands \u00b6 Command Action python3 run.py --config Initial git configuration python3 run.py --update Update workspace with newly available problems python3 run.py --test [folder name] Run unit tests to see how your programs perform","title":"Coding Exercises"},{"location":"set-up/#overview","text":"Every Wednesday, a new set of programming exercises will be introduced via GitHub. You can find the exercises at the repository https://github.com/omolazabal/si-fall-2019 . Continue reading to learn how to use the repository. The structures of the repository is as follows: . \u251c\u2500 1-dynamic-memory/ # Dynamic memory topic \u2502 \u251c\u2500 codebase \u2502 \u2514\u2500 ... \u2502 \u251c\u2500 2-fixed-vector/ # Vectors topic \u2502 \u251c\u2500 codebase \u2502 \u2514\u2500 ... \u2502 \u251c\u2500 ... # Other topics \u2502 \u2514\u2500 ... \u2502 \u251c\u2500 7-recursion/a # Recursion topics \u2502 \u251c\u2500 codebase \u2502 \u2514\u2500 ... Where each directory labeled with a number represents a topic and their sub-directories represents their codebase. Note Topics will be added as the semester progresses as described on the homepage . Each topic's codebase contains functions with missing code segments. Participants will be tasked with filling in the missing information. Details on the missing information can be found under the topic's respective tab on this website. At the end of the week, the topic's respective codebase will be upadated with solutions, in case participants were unable to finish during the SI session.","title":"Overview"},{"location":"set-up/#getting-started","text":"Download and set up Tuffix . Create a GitHub account Fork the SI GitHub repository . You can accomplish this by clicking the Fork button on the top right corner of this page. Navigating to your preferred workspace in your terminal to work on the repository locally. Use this guide if necessary. Clone your forked repository by running the following command. Replace with your GitHub username. git clone https://github.com/<YOUR_GITHUB_USERNAME>/si-fall-2019.git","title":"Getting started"},{"location":"set-up/#workflow","text":"","title":"Workflow"},{"location":"set-up/#initial-set-up","text":"Before you begin working on programming exercises, you'll have to configure your repository so that you can update it with new problems. This can be done by running the following command in your terminal while in your repository: python3 run.py --config Warning This only has to be done once. If you were to run this command again, all of your progress from all topics will be erased","title":"Initial Set Up"},{"location":"set-up/#updating-your-set-of-exercises","text":"Every week of the semester this repository will be updated with new exercises. The files of each exercise will available in their respective folder. The task is to fill out the empty functions. To update your repository with the latest problems, run the command: python3 run.py --update","title":"Updating Your Set of Exercises"},{"location":"set-up/#editing-code-segments","text":"Code segments you are intended to modify are labeled via comments: #include \"course.h\" #include \"student.h\" #include <stdexcept> using namespace std ; Course :: Course () { // Initialize member variables. // By default, course will hold a max of 25 students. // ========= ONLY MODIFY BETWEEN THE LINES =========== // ==================================================== } Please only modify the code between the lines. If changes are made elsewhere, there will be issues when attempting to update your repository with new problems.","title":"Editing Code Segments"},{"location":"set-up/#testing-your-changes","text":"To execute your programs, run the following command at the root of your repository: python3 run.py --test <folder_name> Where the --test flag signifies you want to test the corresponding code in the folder named . Please replace with the name of whichever folder you would like to test. For example, the following command will un the unit tests associated with the 1-dynamic-memory problem set: python3 run.py --test 1-dynamic-memory If you wish to run all tests, use the command: python3 run.py --test all","title":"Testing Your Changes"},{"location":"set-up/#summary-of-commands","text":"Command Action python3 run.py --config Initial git configuration python3 run.py --update Update workspace with newly available problems python3 run.py --test [folder name] Run unit tests to see how your programs perform","title":"Summary of commands"},{"location":"si-sessions/","text":"There are plenty of CPSC 131 Supplemental Instruction sections available. Below is the schedule. Date Time Room Leader Professor TBD TBD TBD Daniel Walsh Anand Panangadan TBD TBD TBD Gregory Vasquez Doina Bein TBD TBD TBD Janeen Yamak Lakhanpal TBD TBD TBD Oscar Olazabal Lakhanpal Note SI sessions may slightly vary in terms of content and presentation, as SI leaders are required to create an ajenda for their particular professor.","title":"SI Sessions"},{"location":"essentials/coding-exercise/","text":"","title":"Coding Exercise"},{"location":"essentials/overview/","text":"","title":"Overview"},{"location":"essentials/problems/","text":"","title":"Problems"},{"location":"essentials/resources/","text":"","title":"Resources"},{"location":"graphs/coding-exercise/","text":"","title":"Coding Exercise"},{"location":"graphs/overview/","text":"","title":"Overview"},{"location":"graphs/problems/","text":"","title":"Problems"},{"location":"graphs/resources/","text":"","title":"Resources"},{"location":"hash-tables/coding-exercise/","text":"","title":"Coding Exercise"},{"location":"hash-tables/overview/","text":"","title":"Overview"},{"location":"hash-tables/problems/","text":"","title":"Problems"},{"location":"hash-tables/resources/","text":"","title":"Resources"},{"location":"linked-list/coding-exercise/","text":"","title":"Coding Exercise"},{"location":"linked-list/overview/","text":"","title":"Overview"},{"location":"linked-list/problems/","text":"","title":"Problems"},{"location":"linked-list/resources/","text":"","title":"Resources"},{"location":"stacks-queues/coding-exercise/","text":"","title":"Coding Exercise"},{"location":"stacks-queues/overview/","text":"","title":"Overview"},{"location":"stacks-queues/problems/","text":"","title":"Problems"},{"location":"stacks-queues/resources/","text":"","title":"Resources"},{"location":"trees/coding-exercise/","text":"","title":"Coding Exercise"},{"location":"trees/overview/","text":"","title":"Overview"},{"location":"trees/problems/","text":"","title":"Problems"},{"location":"trees/resources/","text":"","title":"Resources"},{"location":"vectors/coding-exercise/","text":"","title":"Coding Exercise"},{"location":"vectors/overview/","text":"","title":"Overview"},{"location":"vectors/problems/","text":"","title":"Problems"},{"location":"vectors/resources/","text":"","title":"Resources"}]}